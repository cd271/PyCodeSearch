{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/bit/subsets.py", "fileNameBase": "subsets", "extension": "py", "doc": {"long_description": "return all possible subsets.\n\nNote: The solution set must not contain duplicate subsets.\n\nFor example,\nIf nums = [1,2,3], a solution is:\n\n{\n    (1, 2),\n    (1, 3),\n    (1,),\n    (2,),\n    (3,),\n    (1, 2, 3),\n    (),\n    (2, 3)\n}", "short_description": "Given a set of distinct integers, nums,", "full": "Given a set of distinct integers, nums,\nreturn all possible subsets.\n\nNote: The solution set must not contain duplicate subsets.\n\nFor example,\nIf nums = [1,2,3], a solution is:\n\n{\n    (1, 2),\n    (1, 3),\n    (1,),\n    (2,),\n    (3,),\n    (1, 2, 3),\n    (),\n    (2, 3)\n}"}}, "functions": {"subsets": {"doc": {"args": {"nums": {"description": "List[int]"}}, "returns": {"description": "Set[tuple]", "is_generator": false}}, "args": ["nums"], "returns": ["res"], "min_max_lineno": {"min_lineno": 21, "max_lineno": 35}, "calls": ["len", "set", "range", "tuple", "set.add", "enumerate"], "store_vars_calls": {"n": "len", "res": "set", "subset": "tuple"}, "source_code": "def subsets(nums):\n    \"\"\"\n    :param nums: List[int]\n    :return: Set[tuple]\n    \"\"\"\n    n = len(nums)\n    total = 1 << n\n    res = set()\n    for i in range(total):\n        subset = tuple((num for (j, num) in enumerate(nums) if i & 1 << j))\n        res.add(subset)\n    return res"}}, "is_test": false}