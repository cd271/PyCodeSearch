{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/dp/int_divide.py", "fileNameBase": "int_divide", "extension": "py", "doc": {"long_description": "non-negative number division, or decomposition.\n\nThe complexity is O(n^2).\n\nExample 1:\nInput: 4\nOutput: 5\nExplaination:\n4=4\n4=3+1\n4=2+2\n4=2+1+1\n4=1+1+1+1\n\nExample :\nInput: 7\nOutput: 15\nExplaination:\n7=7\n7=6+1\n7=5+2\n7=5+1+1\n7=4+3\n7=4+2+1\n7=4+1+1+1\n7=3+3+1\n7=3+2+2\n7=3+2+1+1\n7=3+1+1+1+1\n7=2+2+2+1\n7=2+2+1+1+1\n7=2+1+1+1+1+1\n7=1+1+1+1+1+1+1", "short_description": "Given positive integer decompose, find an algorithm to find the number of", "full": "Given positive integer decompose, find an algorithm to find the number of\nnon-negative number division, or decomposition.\n\nThe complexity is O(n^2).\n\nExample 1:\nInput: 4\nOutput: 5\nExplaination:\n4=4\n4=3+1\n4=2+2\n4=2+1+1\n4=1+1+1+1\n\nExample :\nInput: 7\nOutput: 15\nExplaination:\n7=7\n7=6+1\n7=5+2\n7=5+1+1\n7=4+3\n7=4+2+1\n7=4+1+1+1\n7=3+3+1\n7=3+2+2\n7=3+2+1+1\n7=3+1+1+1+1\n7=2+2+2+1\n7=2+2+1+1+1\n7=2+1+1+1+1+1\n7=1+1+1+1+1+1+1"}}, "functions": {"int_divide": {"doc": {"long_description": "decompose -- integer", "short_description": "Find number of decompositions from `decompose`"}, "args": ["decompose"], "returns": ["arr[decompose][decompose]"], "min_max_lineno": {"min_lineno": 40, "max_lineno": 56}, "calls": ["range"], "source_code": "def int_divide(decompose):\n    \"\"\"Find number of decompositions from `decompose`\n\n    decompose -- integer\n    \"\"\"\n    arr = [[0 for i in range(decompose + 1)] for j in range(decompose + 1)]\n    arr[1][1] = 1\n    for i in range(1, decompose + 1):\n        for j in range(1, decompose + 1):\n            if i < j:\n                arr[i][j] = arr[i][i]\n            elif i == j:\n                arr[i][j] = 1 + arr[i][j - 1]\n            else:\n                arr[i][j] = arr[i][j - 1] + arr[i - j][j]\n    return arr[decompose][decompose]"}}, "is_test": false}