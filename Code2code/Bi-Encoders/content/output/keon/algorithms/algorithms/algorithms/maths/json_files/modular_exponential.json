{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/maths/modular_exponential.py", "fileNameBase": "modular_exponential", "extension": "py"}, "functions": {"modular_exponential": {"doc": {"long_description": "Time complexity - O(log n)\nUse similar to Python in-built function pow.", "short_description": "Computes (base ^ exponent) % mod."}, "args": ["base", "exponent", "mod"], "returns": ["result"], "min_max_lineno": {"min_lineno": 1, "max_lineno": 19}, "calls": ["ValueError"], "source_code": "def modular_exponential(base, exponent, mod):\n    \"\"\"Computes (base ^ exponent) % mod.\n    Time complexity - O(log n)\n    Use similar to Python in-built function pow.\"\"\"\n    if exponent < 0:\n        raise ValueError('Exponent must be positive.')\n    base %= mod\n    result = 1\n    while exponent > 0:\n        if exponent & 1:\n            result = result * base % mod\n        exponent = exponent >> 1\n        base = base * base % mod\n    return result"}}, "is_test": false}