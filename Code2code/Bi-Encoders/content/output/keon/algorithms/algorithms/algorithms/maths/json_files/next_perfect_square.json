{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/maths/next_perfect_square.py", "fileNameBase": "next_perfect_square", "extension": "py", "doc": {"long_description": "Check the argument to see if it is a perfect square itself, if it is not then return -1 otherwise\nlook for the next perfect square.\nfor instance if you pass 121 then the script should return the next perfect square which is 144.", "short_description": "This program will look for the next perfect square.", "full": "This program will look for the next perfect square.\nCheck the argument to see if it is a perfect square itself, if it is not then return -1 otherwise\nlook for the next perfect square.\nfor instance if you pass 121 then the script should return the next perfect square which is 144."}}, "functions": {"find_next_square": {"args": ["sq"], "returns": ["-1", "(root + 1) ** 2"], "min_max_lineno": {"min_lineno": 8, "max_lineno": 13}, "calls": ["root.is_integer"], "source_code": "def find_next_square(sq):\n    root = sq ** 0.5\n    if root.is_integer():\n        return (root + 1) ** 2\n    return -1"}, "find_next_square2": {"doc": {"short_description": "Alternative method, works by evaluating anything non-zero as True (0.000001 --> True) "}, "args": ["sq"], "returns": ["-1 if root % 1 else (root + 1) ** 2"], "min_max_lineno": {"min_lineno": 14, "max_lineno": 18}, "source_code": "def find_next_square2(sq):\n    \"\"\" Alternative method, works by evaluating anything non-zero as True (0.000001 --> True) \"\"\"\n    root = sq ** 0.5\n    return -1 if root % 1 else (root + 1) ** 2"}}, "is_test": false}