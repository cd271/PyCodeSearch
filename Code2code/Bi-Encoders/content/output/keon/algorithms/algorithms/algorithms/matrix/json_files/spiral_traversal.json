{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/matrix/spiral_traversal.py", "fileNameBase": "spiral_traversal", "extension": "py", "doc": {"long_description": "return all elements of the matrix in spiral order.\nFor example,\nGiven the following matrix:\n[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\n\n\nYou should return [1,2,3,6,9,8,7,4,5].", "short_description": "Given a matrix of m x n elements (m rows, n columns),", "full": "Given a matrix of m x n elements (m rows, n columns),\nreturn all elements of the matrix in spiral order.\nFor example,\nGiven the following matrix:\n[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\n\n\nYou should return [1,2,3,6,9,8,7,4,5]."}}, "functions": {"spiral_traversal": {"args": ["matrix"], "returns": ["res", "res"], "min_max_lineno": {"min_lineno": 17, "max_lineno": 46}, "calls": ["len", "range", "res.append"], "source_code": "def spiral_traversal(matrix):\n    res = []\n    if len(matrix) == 0:\n        return res\n    row_begin = 0\n    row_end = len(matrix) - 1\n    col_begin = 0\n    col_end = len(matrix[0]) - 1\n    while row_begin <= row_end and col_begin <= col_end:\n        for i in range(col_begin, col_end + 1):\n            res.append(matrix[row_begin][i])\n        row_begin += 1\n        for i in range(row_begin, row_end + 1):\n            res.append(matrix[i][col_end])\n        col_end -= 1\n        if row_begin <= row_end:\n            for i in range(col_end, col_begin - 1, -1):\n                res.append(matrix[row_end][i])\n        row_end -= 1\n        if col_begin <= col_end:\n            for i in range(row_end, row_begin - 1, -1):\n                res.append(matrix[i][col_begin])\n        col_begin += 1\n    return res"}}, "body": {"calls": ["print", "spiral_traversal.spiral_traversal"], "source_code": ["print(spiral_traversal(mat))", "spiral_traversal(mat)"]}, "main_info": {"main_flag": 1, "main_function": "spiral_traversal.print", "type": "script"}, "is_test": false}