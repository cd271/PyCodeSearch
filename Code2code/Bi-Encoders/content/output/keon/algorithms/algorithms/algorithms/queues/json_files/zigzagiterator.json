{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/queues/zigzagiterator.py", "fileNameBase": "zigzagiterator", "extension": "py"}, "classes": {"ZigZagIterator": {"min_max_lineno": {"min_lineno": 1, "max_lineno": 28}, "methods": {"__init__": {"doc": {"short_description": "Initialize your data structure here."}, "args": ["self", "v1", "v2"], "min_max_lineno": {"min_lineno": 2, "max_lineno": 10}, "calls": ["print"], "source_code": "def __init__(self, v1, v2):\n    \"\"\"\n        Initialize your data structure here.\n        :type v1: List[int]\n        :type v2: List[int]\n        \"\"\"\n    self.queue = [_ for _ in (v1, v2) if _]\n    print(self.queue)"}, "next": {"args": ["self"], "returns": ["ret"], "min_max_lineno": {"min_lineno": 11, "max_lineno": 20}, "calls": ["zigzagiterator.ZigZagIterator.queue.pop", "zigzagiterator.ZigZagIterator.pop", "zigzagiterator.ZigZagIterator.queue.append"], "store_vars_calls": {"v": "self.queue.pop", "ret": "v.pop"}, "source_code": "def next(self):\n    \"\"\"\n        :rtype: int\n        \"\"\"\n    v = self.queue.pop(0)\n    ret = v.pop(0)\n    if v:\n        self.queue.append(v)\n    return ret"}, "has_next": {"args": ["self"], "returns": ["False", "True"], "min_max_lineno": {"min_lineno": 21, "max_lineno": 28}, "source_code": "def has_next(self):\n    \"\"\"\n        :rtype: bool\n        \"\"\"\n    if self.queue:\n        return True\n    return False"}}}}, "body": {"calls": ["zigzagiterator.ZigZagIterator.has_next", "print", "zigzagiterator.ZigZagIterator.next"], "store_vars_calls": {"it": "ZigZagIterator"}, "source_code": ["ZigZagIterator(l1, l2)", "it.has_next()", "print(it.next())", "it.next()"]}, "is_test": false}