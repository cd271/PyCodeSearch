{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/sort/meeting_rooms.py", "fileNameBase": "meeting_rooms", "extension": "py", "doc": {"long_description": "start and end times [[s1,e1],[s2,e2],...] (si < ei),\ndetermine if a person could attend all meetings.\n\nFor example,\nGiven [[0, 30],[5, 10],[15, 20]],\nreturn false.", "short_description": "Given an array of meeting time intervals consisting of", "full": "Given an array of meeting time intervals consisting of\nstart and end times [[s1,e1],[s2,e2],...] (si < ei),\ndetermine if a person could attend all meetings.\n\nFor example,\nGiven [[0, 30],[5, 10],[15, 20]],\nreturn false."}}, "functions": {"can_attend_meetings": {"args": ["intervals"], "returns": ["True", "False"], "min_max_lineno": {"min_lineno": 12, "max_lineno": 22}, "calls": ["sorted", "range", "len"], "store_vars_calls": {"intervals": "sorted"}, "source_code": "def can_attend_meetings(intervals):\n    \"\"\"\n    :type intervals: List[Interval]\n    :rtype: bool\n    \"\"\"\n    intervals = sorted(intervals, key=lambda x: x.start)\n    for i in range(1, len(intervals)):\n        if intervals[i].start < intervals[i - 1].end:\n            return False\n    return True"}}, "is_test": false}