{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/stack/is_sorted.py", "fileNameBase": "is_sorted", "extension": "py", "doc": {"long_description": "true if the elements in the stack occur in ascending increasing order from\nbottom, and false otherwise. That is, the smallest element should be at bottom\n\nFor example:\nbottom [6, 3, 5, 1, 2, 4] top\nThe function should return false\nbottom [1, 2, 3, 4, 5, 6] top\nThe function should return true", "short_description": "Given a stack, a function is_sorted accepts a stack as a parameter and returns", "full": "Given a stack, a function is_sorted accepts a stack as a parameter and returns\ntrue if the elements in the stack occur in ascending increasing order from\nbottom, and false otherwise. That is, the smallest element should be at bottom\n\nFor example:\nbottom [6, 3, 5, 1, 2, 4] top\nThe function should return false\nbottom [1, 2, 3, 4, 5, 6] top\nThe function should return true"}}, "functions": {"is_sorted": {"args": ["stack"], "returns": ["True", "False"], "min_max_lineno": {"min_lineno": 14, "max_lineno": 33}, "calls": ["range", "len", "stack.pop", "storage_stack.append", "stack.append", "storage_stack.pop"], "store_vars_calls": {"first_val": "stack.pop", "second_val": "stack.pop"}, "source_code": "def is_sorted(stack):\n    storage_stack = []\n    for i in range(len(stack)):\n        if len(stack) == 0:\n            break\n        first_val = stack.pop()\n        if len(stack) == 0:\n            break\n        second_val = stack.pop()\n        if first_val < second_val:\n            return False\n        storage_stack.append(first_val)\n        stack.append(second_val)\n    for i in range(len(storage_stack)):\n        stack.append(storage_stack.pop())\n    return True"}}, "is_test": false}