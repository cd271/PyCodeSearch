{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/bit/count_flips_to_convert.py", "fileNameBase": "count_flips_to_convert", "extension": "py", "doc": {"long_description": "flip to convert integer A to integer B.\nFor example:\nInput: 29 (or: 11101), 15 (or: 01111)\nOutput: 2", "short_description": "Write a function to determine the minimal number of bits you would need to", "full": "Write a function to determine the minimal number of bits you would need to\nflip to convert integer A to integer B.\nFor example:\nInput: 29 (or: 11101), 15 (or: 01111)\nOutput: 2"}}, "functions": {"count_flips_to_convert": {"args": ["a", "b"], "returns": ["count"], "min_max_lineno": {"min_lineno": 10, "max_lineno": 20}, "source_code": "def count_flips_to_convert(a, b):\n    diff = a ^ b\n    count = 0\n    while diff:\n        diff &= diff - 1\n        count += 1\n    return count"}}, "is_test": false}