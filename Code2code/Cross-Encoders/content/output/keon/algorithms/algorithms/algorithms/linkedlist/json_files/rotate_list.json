{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/linkedlist/rotate_list.py", "fileNameBase": "rotate_list", "extension": "py", "doc": {"long_description": "where k is non-negative.\n\nFor example:\nGiven 1->2->3->4->5->NULL and k = 2,\nreturn 4->5->1->2->3->NULL.", "short_description": "Given a list, rotate the list to the right by k places,", "full": "Given a list, rotate the list to the right by k places,\nwhere k is non-negative.\n\nFor example:\nGiven 1->2->3->4->5->NULL and k = 2,\nreturn 4->5->1->2->3->NULL."}}, "functions": {"rotate_right": {"args": ["head", "k"], "returns": ["head", "head"], "min_max_lineno": {"min_lineno": 17, "max_lineno": 40}, "calls": ["range"], "source_code": "def rotate_right(head, k):\n    \"\"\"\n    :type head: ListNode\n    :type k: int\n    :rtype: ListNode\n    \"\"\"\n    if not head or not head.next:\n        return head\n    current = head\n    length = 1\n    while current.next:\n        current = current.next\n        length += 1\n    current.next = head\n    k = k % length\n    for i in range(length - k):\n        current = current.next\n    head = current.next\n    current.next = None\n    return head"}}, "is_test": false}