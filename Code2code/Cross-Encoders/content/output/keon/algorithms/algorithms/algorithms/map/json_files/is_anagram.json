{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/map/is_anagram.py", "fileNameBase": "is_anagram", "extension": "py", "doc": {"long_description": "Example 1:\nInput: s = \"anagram\", t = \"nagaram\"\nOutput: true\n\nExample 2:\nInput: s = \"rat\", t = \"car\"\nOutput: false\n\nNote:\nYou may assume the string contains only lowercase alphabets.\n\nReference: https://leetcode.com/problems/valid-anagram/description/", "short_description": "Given two strings s and t , write a function to determine if t is an anagram of s.", "full": "Given two strings s and t , write a function to determine if t is an anagram of s.\n\nExample 1:\nInput: s = \"anagram\", t = \"nagaram\"\nOutput: true\n\nExample 2:\nInput: s = \"rat\", t = \"car\"\nOutput: false\n\nNote:\nYou may assume the string contains only lowercase alphabets.\n\nReference: https://leetcode.com/problems/valid-anagram/description/"}}, "functions": {"is_anagram": {"args": ["s", "t"], "returns": ["maps == mapt"], "min_max_lineno": {"min_lineno": 17, "max_lineno": 30}, "calls": ["maps.get", "mapt.get"], "source_code": "def is_anagram(s, t):\n    \"\"\"\n    :type s: str\n    :type t: str\n    :rtype: bool\n    \"\"\"\n    maps = {}\n    mapt = {}\n    for i in s:\n        maps[i] = maps.get(i, 0) + 1\n    for i in t:\n        mapt[i] = mapt.get(i, 0) + 1\n    return maps == mapt"}}, "is_test": false}