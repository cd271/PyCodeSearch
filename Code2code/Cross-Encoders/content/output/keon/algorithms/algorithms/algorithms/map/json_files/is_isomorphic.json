{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/map/is_isomorphic.py", "fileNameBase": "is_isomorphic", "extension": "py", "doc": {"long_description": "Two strings are isomorphic if the characters in s can be replaced to get t.\nAll occurrences of a character must be replaced with another character while\npreserving the order of characters. No two characters may map to the same\ncharacter but a character may map to itself.\n\nExample 1:\nInput: s = \"egg\", t = \"add\"\nOutput: true\n\nExample 2:\nInput: s = \"foo\", t = \"bar\"\nOutput: false\n\nExample 3:\nInput: s = \"paper\", t = \"title\"\nOutput: true\nReference: https://leetcode.com/problems/isomorphic-strings/description/", "short_description": "Given two strings s and t, determine if they are isomorphic.", "full": "Given two strings s and t, determine if they are isomorphic.\nTwo strings are isomorphic if the characters in s can be replaced to get t.\nAll occurrences of a character must be replaced with another character while\npreserving the order of characters. No two characters may map to the same\ncharacter but a character may map to itself.\n\nExample 1:\nInput: s = \"egg\", t = \"add\"\nOutput: true\n\nExample 2:\nInput: s = \"foo\", t = \"bar\"\nOutput: false\n\nExample 3:\nInput: s = \"paper\", t = \"title\"\nOutput: true\nReference: https://leetcode.com/problems/isomorphic-strings/description/"}}, "functions": {"is_isomorphic": {"args": ["s", "t"], "returns": ["True", "False", "False", "False"], "min_max_lineno": {"min_lineno": 21, "max_lineno": 41}, "calls": ["set", "range", "len", "set.add"], "store_vars_calls": {"set_value": "set"}, "source_code": "def is_isomorphic(s, t):\n    \"\"\"\n    :type s: str\n    :type t: str\n    :rtype: bool\n    \"\"\"\n    if len(s) != len(t):\n        return False\n    dict = {}\n    set_value = set()\n    for i in range(len(s)):\n        if s[i] not in dict:\n            if t[i] in set_value:\n                return False\n            dict[s[i]] = t[i]\n            set_value.add(t[i])\n        elif dict[s[i]] != t[i]:\n            return False\n    return True"}}, "is_test": false}