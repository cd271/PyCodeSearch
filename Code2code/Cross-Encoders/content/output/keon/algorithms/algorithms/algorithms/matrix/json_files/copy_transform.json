{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/matrix/copy_transform.py", "fileNameBase": "copy_transform", "extension": "py"}, "functions": {"rotate_clockwise": {"args": ["matrix"], "returns": ["new"], "min_max_lineno": {"min_lineno": 1, "max_lineno": 11}, "calls": ["reversed", "enumerate", "new[].append", "new.insert"], "source_code": "def rotate_clockwise(matrix):\n    new = []\n    for row in reversed(matrix):\n        for (i, elem) in enumerate(row):\n            try:\n                new[i].append(elem)\n            except IndexError:\n                new.insert(i, [])\n                new[i].append(elem)\n    return new"}, "rotate_counterclockwise": {"args": ["matrix"], "returns": ["new"], "min_max_lineno": {"min_lineno": 13, "max_lineno": 23}, "calls": ["enumerate", "reversed", "new[].append", "new.insert"], "source_code": "def rotate_counterclockwise(matrix):\n    new = []\n    for row in matrix:\n        for (i, elem) in enumerate(reversed(row)):\n            try:\n                new[i].append(elem)\n            except IndexError:\n                new.insert(i, [])\n                new[i].append(elem)\n    return new"}, "top_left_invert": {"args": ["matrix"], "returns": ["new"], "min_max_lineno": {"min_lineno": 25, "max_lineno": 35}, "calls": ["enumerate", "new[].append", "new.insert"], "source_code": "def top_left_invert(matrix):\n    new = []\n    for row in matrix:\n        for (i, elem) in enumerate(row):\n            try:\n                new[i].append(elem)\n            except IndexError:\n                new.insert(i, [])\n                new[i].append(elem)\n    return new"}, "bottom_left_invert": {"args": ["matrix"], "returns": ["new"], "min_max_lineno": {"min_lineno": 37, "max_lineno": 47}, "calls": ["reversed", "enumerate", "new[].append", "new.insert"], "source_code": "def bottom_left_invert(matrix):\n    new = []\n    for row in reversed(matrix):\n        for (i, elem) in enumerate(reversed(row)):\n            try:\n                new[i].append(elem)\n            except IndexError:\n                new.insert(i, [])\n                new[i].append(elem)\n    return new"}, "print_matrix": {"args": ["matrix", "name"], "min_max_lineno": {"min_lineno": 50, "max_lineno": 55}, "calls": ["print"], "source_code": "def print_matrix(matrix, name):\n    print('{}:\\n['.format(name))\n    for row in matrix:\n        print('  {}'.format(row))\n    print(']\\n')"}}, "body": {"calls": ["copy_transform.print_matrix", "copy_transform.rotate_clockwise", "copy_transform.rotate_counterclockwise", "copy_transform.top_left_invert", "copy_transform.bottom_left_invert"], "source_code": ["print_matrix(matrix, 'initial')", "print_matrix(rotate_clockwise(matrix), 'clockwise')", "rotate_clockwise(matrix)", "print_matrix(rotate_counterclockwise(matrix), 'counterclockwise')", "rotate_counterclockwise(matrix)", "print_matrix(top_left_invert(matrix), 'top left invert')", "top_left_invert(matrix)", "print_matrix(bottom_left_invert(matrix), 'bottom left invert')", "bottom_left_invert(matrix)"]}, "main_info": {"main_flag": 1, "type": "script"}, "is_test": false}