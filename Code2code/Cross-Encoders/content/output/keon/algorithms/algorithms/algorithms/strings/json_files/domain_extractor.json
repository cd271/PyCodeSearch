{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/strings/domain_extractor.py", "fileNameBase": "domain_extractor", "extension": "py", "doc": {"long_description": "Examples:\ndomain_name(\"http://github.com/SaadBenn\") == \"github\" \ndomain_name(\"http://www.zombie-bites.com\") == \"zombie-bites\"\ndomain_name(\"https://www.cnet.com\") == \"cnet\"\n\nNote: The idea is not to use any built-in libraries such as re (regular expression) or urlparse except .split() built-in function", "short_description": "Write a function that when given a URL as a string, parses out just the domain name and returns it as a string. ", "full": "Write a function that when given a URL as a string, parses out just the domain name and returns it as a string. \n\nExamples:\ndomain_name(\"http://github.com/SaadBenn\") == \"github\" \ndomain_name(\"http://www.zombie-bites.com\") == \"zombie-bites\"\ndomain_name(\"https://www.cnet.com\") == \"cnet\"\n\nNote: The idea is not to use any built-in libraries such as re (regular expression) or urlparse except .split() built-in function"}}, "functions": {"domain_name_1": {"args": ["url"], "returns": ["actual_domain[0]", "actual_domain[1]"], "min_max_lineno": {"min_lineno": 13, "max_lineno": 24}, "calls": ["full_domain_name.split", "url.split", "len"], "store_vars_calls": {"actual_domain": "full_domain_name.split"}, "source_code": "def domain_name_1(url):\n    full_domain_name = url.split('//')[-1]\n    actual_domain = full_domain_name.split('.')\n    if len(actual_domain) > 2:\n        return actual_domain[1]\n    return actual_domain[0]"}, "domain_name_2": {"args": ["url"], "returns": ["url.split('//')[-1].split('www.')[-1].split('.')[0]"], "min_max_lineno": {"min_lineno": 27, "max_lineno": 29}, "calls": ["[].split", "url.split"], "source_code": "def domain_name_2(url):\n    return url.split('//')[-1].split('www.')[-1].split('.')[0]"}}, "is_test": false}