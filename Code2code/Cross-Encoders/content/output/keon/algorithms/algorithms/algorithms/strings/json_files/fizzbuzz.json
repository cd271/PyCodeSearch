{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/strings/fizzbuzz.py", "fileNameBase": "fizzbuzz", "extension": "py", "doc": {"long_description": "where N is the parametered value. N will never be less than 1.\n\nReplace certain values however if any of the following conditions are met:\n\nIf the value is a multiple of 3: use the value 'Fizz' instead\nIf the value is a multiple of 5: use the value 'Buzz' instead\nIf the value is a multiple of 3 & 5: use the value 'FizzBuzz' instead", "short_description": "Write a function that returns an array containing the numbers from 1 to N, ", "full": "Write a function that returns an array containing the numbers from 1 to N, \nwhere N is the parametered value. N will never be less than 1.\n\nReplace certain values however if any of the following conditions are met:\n\nIf the value is a multiple of 3: use the value 'Fizz' instead\nIf the value is a multiple of 5: use the value 'Buzz' instead\nIf the value is a multiple of 3 & 5: use the value 'FizzBuzz' instead"}}, "functions": {"fizzbuzz": {"args": ["n"], "returns": ["result"], "min_max_lineno": {"min_lineno": 28, "max_lineno": 48}, "calls": ["range", "ValueError", "TypeError", "result.append"], "source_code": "def fizzbuzz(n):\n    if n < 1:\n        raise ValueError('n cannot be less than one')\n    if n is None:\n        raise TypeError('n cannot be None')\n    result = []\n    for i in range(1, n + 1):\n        if i % 3 == 0 and i % 5 == 0:\n            result.append('FizzBuzz')\n        elif i % 3 == 0:\n            result.append('Fizz')\n        elif i % 5 == 0:\n            result.append('Buzz')\n        else:\n            result.append(i)\n    return result"}, "fizzbuzz_with_helper_func": {"args": ["n"], "returns": ["[fb(m) for m in range(1, n + 1)]"], "min_max_lineno": {"min_lineno": 50, "max_lineno": 52}, "calls": ["fizzbuzz.fb", "range"], "source_code": "def fizzbuzz_with_helper_func(n):\n    return [fb(m) for m in range(1, n + 1)]"}, "fb": {"args": ["m"], "returns": ["r if r != '' else m"], "min_max_lineno": {"min_lineno": 53, "max_lineno": 56}, "source_code": "def fb(m):\n    r = (m % 3 == 0) * 'Fizz' + (m % 5 == 0) * 'Buzz'\n    return r if r != '' else m"}}, "is_test": false}