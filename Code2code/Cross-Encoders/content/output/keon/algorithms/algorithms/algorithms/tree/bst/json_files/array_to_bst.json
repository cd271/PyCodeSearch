{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/tree/bst/array_to_bst.py", "fileNameBase": "array_to_bst", "extension": "py", "doc": {"long_description": "convert it to a height balanced BST.", "short_description": "Given an array where elements are sorted in ascending order,", "full": "Given an array where elements are sorted in ascending order,\nconvert it to a height balanced BST."}}, "classes": {"TreeNode": {"extend": ["object"], "min_max_lineno": {"min_lineno": 7, "max_lineno": 12}, "methods": {"__init__": {"args": ["self", "x"], "min_max_lineno": {"min_lineno": 8, "max_lineno": 12}, "source_code": "def __init__(self, x):\n    self.val = x\n    self.left = None\n    self.right = None"}}}}, "functions": {"array_to_bst": {"args": ["nums"], "returns": ["node", "None"], "min_max_lineno": {"min_lineno": 14, "max_lineno": 22}, "calls": ["array_to_bst.array_to_bst", "len"], "store_vars_calls": {"node": "TreeNode", "node.left": "array_to_bst", "node.right": "array_to_bst"}, "source_code": "def array_to_bst(nums):\n    if not nums:\n        return None\n    mid = len(nums) // 2\n    node = TreeNode(nums[mid])\n    node.left = array_to_bst(nums[:mid])\n    node.right = array_to_bst(nums[mid + 1:])\n    return node"}}, "is_test": false}