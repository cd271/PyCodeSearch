{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/algorithms/tree/is_balanced.py", "fileNameBase": "is_balanced", "extension": "py"}, "functions": {"is_balanced": {"args": ["root"], "returns": ["__is_balanced_recursive(root)"], "min_max_lineno": {"min_lineno": 1, "max_lineno": 3}, "calls": ["is_balanced.__is_balanced_recursive"], "source_code": "def is_balanced(root):\n    return __is_balanced_recursive(root)"}, "__is_balanced_recursive": {"doc": {"short_description": "O(N) solution"}, "args": ["root"], "returns": ["-1 != __get_depth(root)"], "min_max_lineno": {"min_lineno": 5, "max_lineno": 10}, "calls": ["is_balanced.__get_depth"], "source_code": "def __is_balanced_recursive(root):\n    \"\"\"\n    O(N) solution\n    \"\"\"\n    return -1 != __get_depth(root)"}, "__get_depth": {"doc": {"short_description": "return 0 if unbalanced else depth + 1"}, "args": ["root"], "returns": ["1 + max(left, right)", "0", "-1"], "min_max_lineno": {"min_lineno": 12, "max_lineno": 23}, "calls": ["is_balanced.__get_depth", "max", "abs"], "store_vars_calls": {"left": "__get_depth", "right": "__get_depth"}, "source_code": "def __get_depth(root):\n    \"\"\"\n    return 0 if unbalanced else depth + 1\n    \"\"\"\n    if root is None:\n        return 0\n    left = __get_depth(root.left)\n    right = __get_depth(root.right)\n    if abs(left - right) > 1 or -1 in [left, right]:\n        return -1\n    return 1 + max(left, right)"}}, "is_test": false}