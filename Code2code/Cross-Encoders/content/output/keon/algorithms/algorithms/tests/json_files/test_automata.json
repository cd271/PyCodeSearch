{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/RepoAnalysis/CodeSearch/Code2code/content/keon/algorithms/tests/test_automata.py", "fileNameBase": "test_automata", "extension": "py"}, "dependencies": [{"from_module": "algorithms.automata", "import": "DFA", "type": "external", "type_element": "module"}, {"import": "unittest", "type": "external", "type_element": "module"}], "classes": {"TestDFA": {"extend": ["unittest.TestCase"], "min_max_lineno": {"min_lineno": 7, "max_lineno": 45}, "methods": {"test_DFA": {"args": ["self"], "min_max_lineno": {"min_lineno": 8, "max_lineno": 45}, "calls": ["test_automata.TestDFA.assertEqual", "algorithms.automata.DFA"], "source_code": "def test_DFA(self):\n    transitions = {'a': {'1': 'a', '0': 'b'}, 'b': {'1': 'b', '0': 'a'}}\n    final = ['a']\n    start = 'a'\n    self.assertEqual(False, DFA(transitions, start, final, '000111100'))\n    self.assertEqual(True, DFA(transitions, start, final, '111000011'))\n    transitions1 = {'0': {'0': '1', '1': '0'}, '1': {'0': '2', '1': '0'}, '2': {'0': '2', '1': '3'}, '3': {'0': '3', '1': '3'}}\n    final1 = ['0', '1', '2']\n    start1 = '0'\n    self.assertEqual(False, DFA(transitions1, start1, final1, '0001111'))\n    self.assertEqual(True, DFA(transitions1, start1, final1, '01010101'))\n    transitions2 = {'0': {'a': '0', 'b': '1'}, '1': {'a': '0', 'b': '2'}, '2': {'a': '3', 'b': '2'}, '3': {'a': '3', 'b': '3'}}\n    final2 = ['3']\n    start2 = '0'\n    self.assertEqual(False, DFA(transitions2, start2, final2, 'aaabbb'))\n    self.assertEqual(True, DFA(transitions2, start2, final2, 'baabba'))"}}}}, "body": {"calls": ["unittest.main"], "source_code": ["unittest.main()"]}, "main_info": {"main_flag": 1, "main_function": "test_automata.unittest.main", "type": "script"}, "is_test": true}