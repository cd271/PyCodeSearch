{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/bit/flip_bit_longest_sequence.py", "fileNameBase": "flip_bit_longest_sequence", "extension": "py", "doc": {"long_description": "Write code to find the length of the longest sequence of 1s you could create.\nFor example:\nInput: 1775 ( or: 11011101111)\nOutput: 8", "short_description": "You have an integer and you can flip exactly one bit from a 0 to 1.", "full": "You have an integer and you can flip exactly one bit from a 0 to 1.\nWrite code to find the length of the longest sequence of 1s you could create.\nFor example:\nInput: 1775 ( or: 11011101111)\nOutput: 8"}}, "functions": {"flip_bit_longest_seq": {"args": ["num"], "returns": ["max_len + 1"], "min_max_lineno": {"min_lineno": 10, "max_lineno": 31}, "calls": ["max"], "store_vars_calls": {"max_len": "max"}, "source_code": "def flip_bit_longest_seq(num):\n    curr_len = 0\n    prev_len = 0\n    max_len = 0\n    while num:\n        if num & 1 == 1:\n            curr_len += 1\n        elif num & 1 == 0:\n            if num & 2 == 0:\n                prev_len = 0\n            else:\n                prev_len = curr_len\n            curr_len = 0\n        max_len = max(max_len, prev_len + curr_len)\n        num = num >> 1\n    return max_len + 1"}}, "is_test": false}