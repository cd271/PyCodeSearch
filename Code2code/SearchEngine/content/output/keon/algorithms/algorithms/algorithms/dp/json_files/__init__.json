{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/dp/__init__.py", "fileNameBase": "__init__", "extension": "py"}, "dependencies": [{"from_module": "buy_sell_stock", "import": "max_profit_naive", "type": "internal", "type_element": "function"}, {"from_module": "buy_sell_stock", "import": "max_profit_optimized", "type": "internal", "type_element": "function"}, {"from_module": "climbing_stairs", "import": "climb_stairs", "type": "internal", "type_element": "function"}, {"from_module": "climbing_stairs", "import": "climb_stairs_optimized", "type": "internal", "type_element": "function"}, {"from_module": "coin_change", "import": "count", "type": "internal", "type_element": "function"}, {"from_module": "combination_sum", "import": "helper_topdown", "type": "internal", "type_element": "function"}, {"from_module": "combination_sum", "import": "combination_sum_topdown", "type": "internal", "type_element": "function"}, {"from_module": "combination_sum", "import": "combination_sum_bottom_up", "type": "internal", "type_element": "function"}, {"from_module": "edit_distance", "import": "edit_distance", "type": "internal", "type_element": "function"}, {"from_module": "egg_drop", "import": "egg_drop", "type": "internal", "type_element": "function"}, {"from_module": "fib", "import": "fib_recursive", "type": "internal", "type_element": "function"}, {"from_module": "fib", "import": "fib_list", "type": "internal", "type_element": "function"}, {"from_module": "fib", "import": "fib_iter", "type": "internal", "type_element": "function"}, {"from_module": "hosoya_triangle", "import": "hosoya", "type": "internal", "type_element": "function"}, {"from_module": "hosoya_triangle", "import": "print_hosoya", "type": "internal", "type_element": "function"}, {"from_module": "hosoya_triangle", "import": "hosoya_testing", "type": "internal", "type_element": "function"}, {"from_module": "house_robber", "import": "house_robber", "type": "internal", "type_element": "function"}, {"from_module": "job_scheduling", "import": "binary_search", "type": "internal", "type_element": "function"}, {"from_module": "job_scheduling", "import": "schedule", "type": "internal", "type_element": "function"}, {"from_module": "job_scheduling", "import": "Job", "type": "internal", "type_element": "class"}, {"from_module": "knapsack", "import": "get_maximum_value", "type": "internal", "type_element": "function"}, {"from_module": "knapsack", "import": "Item", "type": "internal", "type_element": "class"}, {"from_module": "longest_increasing", "import": "longest_increasing_subsequence", "type": "internal", "type_element": "function"}, {"from_module": "longest_increasing", "import": "longest_increasing_subsequence_optimized", "type": "internal", "type_element": "function"}, {"from_module": "longest_increasing", "import": "longest_increasing_subsequence_optimized2", "type": "internal", "type_element": "function"}, {"from_module": "matrix_chain_order", "import": "matrix_chain_order", "type": "internal", "type_element": "function"}, {"from_module": "matrix_chain_order", "import": "print_optimal_solution", "type": "internal", "type_element": "function"}, {"from_module": "matrix_chain_order", "import": "main", "type": "internal", "type_element": "function"}, {"from_module": "max_product_subarray", "import": "max_product", "type": "internal", "type_element": "function"}, {"from_module": "max_product_subarray", "import": "subarray_with_max_product", "type": "internal", "type_element": "function"}, {"from_module": "max_subarray", "import": "max_subarray", "type": "internal", "type_element": "function"}, {"from_module": "min_cost_path", "import": "min_cost", "type": "internal", "type_element": "function"}, {"from_module": "num_decodings", "import": "num_decodings", "type": "internal", "type_element": "function"}, {"from_module": "num_decodings", "import": "num_decodings2", "type": "internal", "type_element": "function"}, {"from_module": "regex_matching", "import": "is_match", "type": "internal", "type_element": "function"}, {"from_module": "rod_cut", "import": "cut_rod", "type": "internal", "type_element": "function"}, {"from_module": "word_break", "import": "word_break", "type": "internal", "type_element": "function"}, {"from_module": "int_divide", "import": "int_divide", "type": "internal", "type_element": "function"}, {"from_module": "k_factor", "import": "find_k_factor", "type": "internal", "type_element": "function"}, {"from_module": "planting_trees", "import": "planting_trees", "type": "internal", "type_element": "function"}], "is_test": false}