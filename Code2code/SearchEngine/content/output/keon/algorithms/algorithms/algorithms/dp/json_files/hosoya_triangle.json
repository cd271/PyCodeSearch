{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/dp/hosoya_triangle.py", "fileNameBase": "hosoya_triangle", "extension": "py", "doc": {"long_description": "of numbers, where if you take any number it is the sum of 2 numbers above.\nFirst line is always 1, and second line is always {1     1}.\n\nThis printHosoya function takes argument n which is the height of the triangle\n(number of lines).\n\nFor example:\nprintHosoya( 6 ) would return:\n1\n1 1\n2 1 2\n3 2 2 3\n5 3 4 3 5\n8 5 6 6 5 8\n\nThe complexity is O(n^3).", "short_description": "Hosoya triangle (originally Fibonacci triangle) is a triangular arrangement", "full": "Hosoya triangle (originally Fibonacci triangle) is a triangular arrangement\nof numbers, where if you take any number it is the sum of 2 numbers above.\nFirst line is always 1, and second line is always {1     1}.\n\nThis printHosoya function takes argument n which is the height of the triangle\n(number of lines).\n\nFor example:\nprintHosoya( 6 ) would return:\n1\n1 1\n2 1 2\n3 2 2 3\n5 3 4 3 5\n8 5 6 6 5 8\n\nThe complexity is O(n^3)."}}, "functions": {"hosoya": {"doc": {"long_description": "height -- height of the triangle", "short_description": "Calculates the hosoya triangle"}, "args": ["height", "width"], "returns": ["0", "1", "1", "hosoya(height - 1, width) + hosoya(height - 2, width)", "hosoya(height - 1, width - 1) + hosoya(height - 2, width - 2)"], "min_max_lineno": {"min_lineno": 22, "max_lineno": 36}, "calls": ["hosoya_triangle.hosoya"], "source_code": "def hosoya(height, width):\n    \"\"\" Calculates the hosoya triangle\n\n    height -- height of the triangle\n    \"\"\"\n    if width == 0 and height in (0, 1):\n        return 1\n    if width == 1 and height in (1, 2):\n        return 1\n    if height > width:\n        return hosoya(height - 1, width) + hosoya(height - 2, width)\n    if width == height:\n        return hosoya(height - 1, width - 1) + hosoya(height - 2, width - 2)\n    return 0"}, "print_hosoya": {"doc": {"long_description": "height -- height of the triangle", "short_description": "Prints the hosoya triangle"}, "args": ["height"], "min_max_lineno": {"min_lineno": 37, "max_lineno": 46}, "calls": ["range", "print", "hosoya_triangle.hosoya"], "source_code": "def print_hosoya(height):\n    \"\"\"Prints the hosoya triangle\n\n    height -- height of the triangle\n    \"\"\"\n    for i in range(height):\n        for j in range(i + 1):\n            print(hosoya(i, j), end=' ')\n        print('\\n', end='')"}, "hosoya_testing": {"doc": {"long_description": "height -- height of the triangle", "short_description": "Test hosoya function"}, "args": ["height"], "returns": ["res"], "min_max_lineno": {"min_lineno": 47, "max_lineno": 57}, "calls": ["range", "res.append", "hosoya_triangle.hosoya"], "source_code": "def hosoya_testing(height):\n    \"\"\"Test hosoya function\n\n    height -- height of the triangle\n    \"\"\"\n    res = []\n    for i in range(height):\n        for j in range(i + 1):\n            res.append(hosoya(i, j))\n    return res"}}, "is_test": false}