{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/graph/check_bipartite.py", "fileNameBase": "check_bipartite", "extension": "py", "doc": {"long_description": "(https://en.wikipedia.org/wiki/Bipartite_graph)", "short_description": "Bipartite graph is a graph whose vertices can be divided into two disjoint and independent sets.", "full": "Bipartite graph is a graph whose vertices can be divided into two disjoint and independent sets.\n(https://en.wikipedia.org/wiki/Bipartite_graph)"}}, "functions": {"check_bipartite": {"doc": {"long_description": "Time complexity is O(|E|)\nSpace complexity is O(|V|)", "short_description": "Determine if the given graph is bipartite."}, "args": ["adj_list"], "returns": ["True", "False", "False"], "min_max_lineno": {"min_lineno": 6, "max_lineno": 41}, "calls": ["len", "queue.pop", "range", "queue.append"], "store_vars_calls": {"vertices": "len", "current": "queue.pop"}, "source_code": "def check_bipartite(adj_list):\n    \"\"\"\n    Determine if the given graph is bipartite.\n\n    Time complexity is O(|E|)\n    Space complexity is O(|V|)\n    \"\"\"\n    vertices = len(adj_list)\n    set_type = [-1 for v in range(vertices)]\n    set_type[0] = 0\n    queue = [0]\n    while queue:\n        current = queue.pop(0)\n        if adj_list[current][current]:\n            return False\n        for adjacent in range(vertices):\n            if adj_list[current][adjacent]:\n                if set_type[adjacent] == set_type[current]:\n                    return False\n                if set_type[adjacent] == -1:\n                    set_type[adjacent] = 1 - set_type[current]\n                    queue.append(adjacent)\n    return True"}}, "is_test": false}