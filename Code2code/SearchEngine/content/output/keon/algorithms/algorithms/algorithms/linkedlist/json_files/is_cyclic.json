{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/linkedlist/is_cyclic.py", "fileNameBase": "is_cyclic", "extension": "py", "doc": {"long_description": "Follow up:\nCan you solve it without using extra space?", "short_description": "Given a linked list, determine if it has a cycle in it.", "full": "Given a linked list, determine if it has a cycle in it.\n\nFollow up:\nCan you solve it without using extra space?"}}, "classes": {"Node": {"min_max_lineno": {"min_lineno": 7, "max_lineno": 12}, "methods": {"__init__": {"args": ["self", "x"], "min_max_lineno": {"min_lineno": 9, "max_lineno": 12}, "source_code": "def __init__(self, x):\n    self.val = x\n    self.next = None"}}}}, "functions": {"is_cyclic": {"args": ["head"], "returns": ["False", "False", "True"], "min_max_lineno": {"min_lineno": 13, "max_lineno": 28}, "source_code": "def is_cyclic(head):\n    \"\"\"\n    :type head: Node\n    :rtype: bool\n    \"\"\"\n    if not head:\n        return False\n    runner = head\n    walker = head\n    while runner.next and runner.next.next:\n        runner = runner.next.next\n        walker = walker.next\n        if runner == walker:\n            return True\n    return False"}}, "is_test": false}