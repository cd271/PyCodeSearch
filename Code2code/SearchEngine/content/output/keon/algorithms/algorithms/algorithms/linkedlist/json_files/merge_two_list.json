{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/linkedlist/merge_two_list.py", "fileNameBase": "merge_two_list", "extension": "py", "doc": {"long_description": "be made by splicing together the nodes of the first two lists.\n\nFor example:\nInput: 1->2->4, 1->3->4\nOutput: 1->1->2->3->4->4", "short_description": "Merge two sorted linked lists and return it as a new list. The new list should", "full": "Merge two sorted linked lists and return it as a new list. The new list should\nbe made by splicing together the nodes of the first two lists.\n\nFor example:\nInput: 1->2->4, 1->3->4\nOutput: 1->1->2->3->4->4"}}, "classes": {"Node": {"min_max_lineno": {"min_lineno": 9, "max_lineno": 14}, "methods": {"__init__": {"args": ["self", "x"], "min_max_lineno": {"min_lineno": 11, "max_lineno": 14}, "source_code": "def __init__(self, x):\n    self.val = x\n    self.next = None"}}}}, "functions": {"merge_two_list": {"args": ["l1", "l2"], "returns": ["ret.next"], "min_max_lineno": {"min_lineno": 15, "max_lineno": 27}, "store_vars_calls": {"ret": "Node", "cur": "Node"}, "source_code": "def merge_two_list(l1, l2):\n    ret = cur = Node(0)\n    while l1 and l2:\n        if l1.val < l2.val:\n            cur.next = l1\n            l1 = l1.next\n        else:\n            cur.next = l2\n            l2 = l2.next\n        cur = cur.next\n    cur.next = l1 or l2\n    return ret.next"}, "merge_two_list_recur": {"args": ["l1", "l2"], "returns": ["l1 or l2", "l1", "l2"], "min_max_lineno": {"min_lineno": 29, "max_lineno": 38}, "calls": ["merge_two_list.merge_two_list_recur"], "store_vars_calls": {"l1.next": "merge_two_list_recur", "l2.next": "merge_two_list_recur"}, "source_code": "def merge_two_list_recur(l1, l2):\n    if not l1 or not l2:\n        return l1 or l2\n    if l1.val < l2.val:\n        l1.next = merge_two_list_recur(l1.next, l2)\n        return l1\n    else:\n        l2.next = merge_two_list_recur(l1, l2.next)\n        return l2"}}, "is_test": false}