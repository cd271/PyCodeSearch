{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/linkedlist/remove_duplicates.py", "fileNameBase": "remove_duplicates", "extension": "py"}, "classes": {"Node": {"min_max_lineno": {"min_lineno": 1, "max_lineno": 5}, "methods": {"__init__": {"args": ["self", "val"], "min_max_lineno": {"min_lineno": 2, "max_lineno": 5}, "source_code": "def __init__(self, val=None):\n    self.val = val\n    self.next = None"}}}}, "functions": {"remove_dups": {"doc": {"long_description": "Space Complexity: O(N)", "short_description": "Time Complexity: O(N)"}, "args": ["head"], "min_max_lineno": {"min_lineno": 6, "max_lineno": 20}, "calls": ["set", "set.add"], "store_vars_calls": {"hashset": "set", "prev": "Node"}, "source_code": "def remove_dups(head):\n    \"\"\"\n    Time Complexity: O(N)\n    Space Complexity: O(N)\n    \"\"\"\n    hashset = set()\n    prev = Node()\n    while head:\n        if head.val in hashset:\n            prev.next = head.next\n        else:\n            hashset.add(head.val)\n            prev = head\n        head = head.next"}, "remove_dups_wothout_set": {"doc": {"long_description": "Space Complexity: O(1)", "short_description": "Time Complexity: O(N^2)"}, "args": ["head"], "min_max_lineno": {"min_lineno": 21, "max_lineno": 35}, "source_code": "def remove_dups_wothout_set(head):\n    \"\"\"\n    Time Complexity: O(N^2)\n    Space Complexity: O(1)\n    \"\"\"\n    current = head\n    while current:\n        runner = current\n        while runner.next:\n            if runner.next.val == current.val:\n                runner.next = runner.next.next\n            else:\n                runner = runner.next\n        current = current.next"}, "print_linked_list": {"args": ["head"], "min_max_lineno": {"min_lineno": 36, "max_lineno": 43}, "calls": ["print"], "source_code": "def print_linked_list(head):\n    string = ''\n    while head.next:\n        string += head.val + ' -> '\n        head = head.next\n    string += head.val\n    print(string)"}}, "body": {"calls": ["remove_duplicates.Node", "remove_duplicates.remove_dups", "remove_duplicates.print_linked_list", "remove_duplicates.remove_dups_wothout_set"], "store_vars_calls": {"a1": "Node", "a2": "Node", "b": "Node", "c1": "Node", "d": "Node", "c2": "Node", "f": "Node", "g": "Node"}, "source_code": ["Node('A')", "Node('A')", "Node('B')", "Node('C')", "Node('D')", "Node('C')", "Node('F')", "Node('G')", "remove_dups(a1)", "print_linked_list(a1)", "remove_dups_wothout_set(a1)", "print_linked_list(a1)"]}, "is_test": false}