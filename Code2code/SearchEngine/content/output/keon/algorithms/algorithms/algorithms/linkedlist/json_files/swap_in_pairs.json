{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/linkedlist/swap_in_pairs.py", "fileNameBase": "swap_in_pairs", "extension": "py", "doc": {"long_description": "and return its head.\n\nFor example,\nGiven 1->2->3->4, you should return the list as 2->1->4->3.\n\nYour algorithm should use only constant space.\nYou may not modify the values in the list,\nonly nodes itself can be changed.", "short_description": "Given a linked list, swap every two adjacent nodes", "full": "Given a linked list, swap every two adjacent nodes\nand return its head.\n\nFor example,\nGiven 1->2->3->4, you should return the list as 2->1->4->3.\n\nYour algorithm should use only constant space.\nYou may not modify the values in the list,\nonly nodes itself can be changed."}}, "classes": {"Node": {"extend": ["object"], "min_max_lineno": {"min_lineno": 12, "max_lineno": 16}, "methods": {"__init__": {"args": ["self", "x"], "min_max_lineno": {"min_lineno": 13, "max_lineno": 16}, "source_code": "def __init__(self, x):\n    self.val = x\n    self.next = None"}}}}, "functions": {"swap_pairs": {"args": ["head"], "returns": ["start.next", "head"], "min_max_lineno": {"min_lineno": 17, "max_lineno": 31}, "store_vars_calls": {"start": "Node"}, "source_code": "def swap_pairs(head):\n    if not head:\n        return head\n    start = Node(0)\n    start.next = head\n    current = start\n    while current.next and current.next.next:\n        first = current.next\n        second = current.next.next\n        first.next = second.next\n        current.next = second\n        current.next.next = first\n        current = current.next.next\n    return start.next"}}, "is_test": false}