{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/map/longest_palindromic_subsequence.py", "fileNameBase": "longest_palindromic_subsequence", "extension": "py"}, "functions": {"longest_palindromic_subsequence": {"args": ["s"], "returns": ["logestLen"], "min_max_lineno": {"min_lineno": 1, "max_lineno": 30}, "calls": ["len", "range"], "store_vars_calls": {"k": "len"}, "source_code": "def longest_palindromic_subsequence(s):\n    k = len(s)\n    olist = [0] * k\n    nList = [0] * k\n    logestSubStr = ''\n    logestLen = 0\n    for j in range(0, k):\n        for i in range(0, j + 1):\n            if j - i <= 1:\n                if s[i] == s[j]:\n                    nList[i] = 1\n                    len_t = j - i + 1\n                    if logestLen < len_t:\n                        logestSubStr = s[i:j + 1]\n                        logestLen = len_t\n            elif s[i] == s[j] and olist[i + 1]:\n                nList[i] = 1\n                len_t = j - i + 1\n                if logestLen < len_t:\n                    logestSubStr = s[i:j + 1]\n                    logestLen = len_t\n        olist = nList\n        nList = [0] * k\n    return logestLen"}}, "is_test": false}