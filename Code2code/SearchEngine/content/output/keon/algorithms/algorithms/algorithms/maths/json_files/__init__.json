{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/maths/__init__.py", "fileNameBase": "__init__", "extension": "py", "doc": {"short_description": "Collection of mathematical algorithms and functions.", "full": "Collection of mathematical algorithms and functions."}}, "dependencies": [{"from_module": "base_conversion", "import": "int_to_base", "type": "internal", "type_element": "function"}, {"from_module": "base_conversion", "import": "base_to_int", "type": "internal", "type_element": "function"}, {"from_module": "decimal_to_binary_ip", "import": "decimal_to_binary_util", "type": "internal", "type_element": "function"}, {"from_module": "decimal_to_binary_ip", "import": "decimal_to_binary_ip", "type": "internal", "type_element": "function"}, {"from_module": "euler_totient", "import": "euler_totient", "type": "internal", "type_element": "function"}, {"from_module": "extended_gcd", "import": "extended_gcd", "type": "internal", "type_element": "function"}, {"from_module": "factorial", "import": "factorial", "type": "internal", "type_element": "function"}, {"from_module": "factorial", "import": "factorial_recur", "type": "internal", "type_element": "function"}, {"from_module": "gcd", "import": "gcd", "type": "internal", "type_element": "function"}, {"from_module": "gcd", "import": "lcm", "type": "internal", "type_element": "function"}, {"from_module": "gcd", "import": "trailing_zero", "type": "internal", "type_element": "function"}, {"from_module": "gcd", "import": "gcd_bit", "type": "internal", "type_element": "function"}, {"from_module": "generate_strobogrammtic", "import": "gen_strobogrammatic", "type": "internal", "type_element": "function"}, {"from_module": "generate_strobogrammtic", "import": "helper", "type": "internal", "type_element": "function"}, {"from_module": "generate_strobogrammtic", "import": "strobogrammatic_in_range", "type": "internal", "type_element": "function"}, {"from_module": "generate_strobogrammtic", "import": "helper2", "type": "internal", "type_element": "function"}, {"from_module": "is_strobogrammatic", "import": "is_strobogrammatic", "type": "internal", "type_element": "function"}, {"from_module": "is_strobogrammatic", "import": "is_strobogrammatic2", "type": "internal", "type_element": "function"}, {"from_module": "modular_exponential", "import": "modular_exponential", "type": "internal", "type_element": "function"}, {"from_module": "next_perfect_square", "import": "find_next_square", "type": "internal", "type_element": "function"}, {"from_module": "next_perfect_square", "import": "find_next_square2", "type": "internal", "type_element": "function"}, {"from_module": "prime_check", "import": "prime_check", "type": "internal", "type_element": "function"}, {"from_module": "primes_sieve_of_eratosthenes", "import": "get_primes", "type": "internal", "type_element": "function"}, {"from_module": "pythagoras", "import": "pythagoras", "type": "internal", "type_element": "function"}, {"from_module": "rabin_miller", "import": "is_prime", "type": "internal", "type_element": "function"}, {"from_module": "rsa", "import": "generate_key", "type": "internal", "type_element": "function"}, {"from_module": "rsa", "import": "encrypt", "type": "internal", "type_element": "function"}, {"from_module": "rsa", "import": "decrypt", "type": "internal", "type_element": "function"}, {"from_module": "combination", "import": "combination", "type": "internal", "type_element": "function"}, {"from_module": "combination", "import": "combination_memo", "type": "internal", "type_element": "function"}, {"from_module": "cosine_similarity", "import": "_l2_distance", "type": "internal", "type_element": "function"}, {"from_module": "cosine_similarity", "import": "cosine_similarity", "type": "internal", "type_element": "function"}, {"from_module": "find_order_simple", "import": "find_order", "type": "internal", "type_element": "function"}, {"from_module": "find_primitive_root_simple", "import": "find_order", "type": "internal", "type_element": "function"}, {"from_module": "find_primitive_root_simple", "import": "euler_totient", "type": "internal", "type_element": "function"}, {"from_module": "find_primitive_root_simple", "import": "find_primitive_root", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "prime_check", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "find_order", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "euler_totient", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "find_primitive_root", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "alice_private_key", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "alice_public_key", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "bob_private_key", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "bob_public_key", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "alice_shared_key", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "bob_shared_key", "type": "internal", "type_element": "function"}, {"from_module": "diffie_hellman_key_exchange", "import": "diffie_hellman_key_exchange", "type": "internal", "type_element": "function"}, {"from_module": "num_digits", "import": "num_digits", "type": "internal", "type_element": "function"}, {"from_module": "power", "import": "power", "type": "internal", "type_element": "function"}, {"from_module": "power", "import": "power_recur", "type": "internal", "type_element": "function"}, {"from_module": "magic_number", "import": "magic_number", "type": "internal", "type_element": "function"}, {"from_module": "krishnamurthy_number", "import": "find_factorial", "type": "internal", "type_element": "function"}, {"from_module": "krishnamurthy_number", "import": "krishnamurthy_number", "type": "internal", "type_element": "function"}, {"from_module": "num_perfect_squares", "import": "num_perfect_squares", "type": "internal", "type_element": "function"}], "is_test": false}