{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/maths/hailstone.py", "fileNameBase": "hailstone", "extension": "py", "doc": {"long_description": "* n == 1    : done\n* n is even : the next n = n/2\n* n is odd  : the next n = 3n + 1", "short_description": "Implementation of hailstone function which generates a sequence for some n by following these rules:", "full": "Implementation of hailstone function which generates a sequence for some n by following these rules:\n* n == 1    : done\n* n is even : the next n = n/2\n* n is odd  : the next n = 3n + 1"}}, "functions": {"hailstone": {"doc": {"long_description": "n: The starting point of the hailstone sequence", "short_description": "Return the 'hailstone sequence' from n to 1"}, "args": ["n"], "returns": ["sequence"], "min_max_lineno": {"min_lineno": 8, "max_lineno": 22}, "calls": ["sequence.append", "int"], "store_vars_calls": {"n": "int"}, "source_code": "def hailstone(n):\n    \"\"\"\n    Return the 'hailstone sequence' from n to 1\n    n: The starting point of the hailstone sequence\n    \"\"\"\n    sequence = [n]\n    while n > 1:\n        if n % 2 != 0:\n            n = 3 * n + 1\n        else:\n            n = int(n / 2)\n        sequence.append(n)\n    return sequence"}}, "is_test": false}