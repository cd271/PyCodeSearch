{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/maths/pythagoras.py", "fileNameBase": "pythagoras", "extension": "py", "doc": {"long_description": "length of the third side.", "short_description": "Given the lengths of two of the three sides of a right angled triangle, this function returns the", "full": "Given the lengths of two of the three sides of a right angled triangle, this function returns the\nlength of the third side."}}, "functions": {"pythagoras": {"doc": {"long_description": "Passing \"?\" will indicate the unknown side.", "short_description": "Returns length of a third side of a right angled triangle."}, "args": ["opposite", "adjacent", "hypotenuse"], "returns": ["'You already know the answer!'", "'Opposite = ' + str((hypotenuse ** 2 - adjacent ** 2) ** 0.5)", "'Adjacent = ' + str((hypotenuse ** 2 - opposite ** 2) ** 0.5)", "'Hypotenuse = ' + str((opposite ** 2 + adjacent ** 2) ** 0.5)"], "min_max_lineno": {"min_lineno": 6, "max_lineno": 21}, "calls": ["str", "ValueError"], "source_code": "def pythagoras(opposite, adjacent, hypotenuse):\n    \"\"\"\n    Returns length of a third side of a right angled triangle.\n    Passing \"?\" will indicate the unknown side.\n    \"\"\"\n    try:\n        if opposite == str('?'):\n            return 'Opposite = ' + str((hypotenuse ** 2 - adjacent ** 2) ** 0.5)\n        if adjacent == str('?'):\n            return 'Adjacent = ' + str((hypotenuse ** 2 - opposite ** 2) ** 0.5)\n        if hypotenuse == str('?'):\n            return 'Hypotenuse = ' + str((opposite ** 2 + adjacent ** 2) ** 0.5)\n        return 'You already know the answer!'\n    except:\n        raise ValueError('invalid argument(s) were given.')"}}, "is_test": false}