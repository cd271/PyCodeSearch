{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/matrix/sparse_mul.py", "fileNameBase": "sparse_mul", "extension": "py", "doc": {"long_description": "You may assume that A's column number is equal to B's row number.\n\nExample:\n\nA = [\n  [ 1, 0, 0],\n  [-1, 0, 3]\n]\n\nB = [\n  [ 7, 0, 0 ],\n  [ 0, 0, 0 ],\n  [ 0, 0, 1 ]\n]\n\n\n     |  1 0 0 |   | 7 0 0 |   |  7 0 0 |\nAB = | -1 0 3 | x | 0 0 0 | = | -7 0 3 |\n                  | 0 0 1 |", "short_description": "Given two sparse matrices A and B, return the result of AB.", "full": "Given two sparse matrices A and B, return the result of AB.\n\nYou may assume that A's column number is equal to B's row number.\n\nExample:\n\nA = [\n  [ 1, 0, 0],\n  [-1, 0, 3]\n]\n\nB = [\n  [ 7, 0, 0 ],\n  [ 0, 0, 0 ],\n  [ 0, 0, 1 ]\n]\n\n\n     |  1 0 0 |   | 7 0 0 |   |  7 0 0 |\nAB = | -1 0 3 | x | 0 0 0 | = | -7 0 3 |\n                  | 0 0 1 |"}}, "functions": {"multiply": {"args": ["self", "a", "b"], "returns": ["c", "None"], "min_max_lineno": {"min_lineno": 76, "max_lineno": 109}, "calls": ["len", "enumerate", "Exception", "range"], "store_vars_calls": {"l": "len"}, "source_code": "def multiply(self, a, b):\n    \"\"\"\n    :type A: List[List[int]]\n    :type B: List[List[int]]\n    :rtype: List[List[int]]\n    \"\"\"\n    if a is None or b is None:\n        return None\n    (m, n) = (len(a), len(b[0]))\n    if len(b) != n:\n        raise Exception(\"A's column number must be equal to B's row number.\")\n    l = len(b[0])\n    (table_a, table_b) = ({}, {})\n    for (i, row) in enumerate(a):\n        for (j, ele) in enumerate(row):\n            if ele:\n                if i not in table_a:\n                    table_a[i] = {}\n                table_a[i][j] = ele\n    for (i, row) in enumerate(b):\n        for (j, ele) in enumerate(row):\n            if ele:\n                if i not in table_b:\n                    table_b[i] = {}\n                table_b[i][j] = ele\n    c = [[0 for j in range(l)] for i in range(m)]\n    for i in table_a:\n        for k in table_a[i]:\n            if k not in table_b:\n                continue\n            for j in table_b[k]:\n                c[i][j] += table_a[i][k] * table_b[k][j]\n    return c"}}, "is_test": false}