{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/search/first_occurrence.py", "fileNameBase": "first_occurrence", "extension": "py", "doc": {"long_description": "Approach- Binary Search\nT(n)- O(log n)", "short_description": "Find first occurance of a number in a sorted array (increasing order)", "full": "Find first occurance of a number in a sorted array (increasing order)\nApproach- Binary Search\nT(n)- O(log n)"}}, "functions": {"first_occurrence": {"doc": {"long_description": "The array has to be sorted in increasing order.", "short_description": "Returns the index of the first occurance of the given element in an array."}, "args": ["array", "query"], "returns": ["low"], "min_max_lineno": {"min_lineno": 6, "max_lineno": 24}, "calls": ["len"], "source_code": "def first_occurrence(array, query):\n    \"\"\"\n    Returns the index of the first occurance of the given element in an array.\n    The array has to be sorted in increasing order.\n    \"\"\"\n    (low, high) = (0, len(array) - 1)\n    while low <= high:\n        mid = low + (high - low) // 2\n        if low == high:\n            break\n        if array[mid] < query:\n            low = mid + 1\n        else:\n            high = mid\n    if array[low] == query:\n        return low"}}, "is_test": false}