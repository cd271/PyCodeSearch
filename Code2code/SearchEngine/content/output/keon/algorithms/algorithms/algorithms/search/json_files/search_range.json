{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/search/search_range.py", "fileNameBase": "search_range", "extension": "py", "doc": {"long_description": "and ending position of a given target value. If the target is not found in the\narray, return [-1, -1].\n\nFor example:\nInput: nums = [5,7,7,8,8,8,10], target = 8\nOutput: [3,5]\nInput: nums = [5,7,7,8,8,8,10], target = 11\nOutput: [-1,-1]", "short_description": "Given an array of integers nums sorted in ascending order, find the starting", "full": "Given an array of integers nums sorted in ascending order, find the starting\nand ending position of a given target value. If the target is not found in the\narray, return [-1, -1].\n\nFor example:\nInput: nums = [5,7,7,8,8,8,10], target = 8\nOutput: [3,5]\nInput: nums = [5,7,7,8,8,8,10], target = 11\nOutput: [-1,-1]"}}, "functions": {"search_range": {"args": ["nums", "target"], "returns": ["[-1, -1]", "[low, j]"], "min_max_lineno": {"min_lineno": 12, "max_lineno": 34}, "calls": ["range", "len"], "source_code": "def search_range(nums, target):\n    \"\"\"\n    :type nums: List[int]\n    :type target: int\n    :rtype: List[int]\n    \"\"\"\n    low = 0\n    high = len(nums) - 1\n    while low < high:\n        mid = low + (high - low) // 2\n        if target <= nums[mid]:\n            high = mid\n        else:\n            low = mid + 1\n    for j in range(len(nums) - 1, -1, -1):\n        if nums[j] == target:\n            return [low, j]\n    return [-1, -1]"}}, "is_test": false}