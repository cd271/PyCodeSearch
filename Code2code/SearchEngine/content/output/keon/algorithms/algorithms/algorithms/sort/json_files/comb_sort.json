{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/sort/comb_sort.py", "fileNameBase": "comb_sort", "extension": "py", "doc": {"long_description": "Worst-case performance: O(N^2)", "short_description": "https://en.wikipedia.org/wiki/Comb_sort", "full": "https://en.wikipedia.org/wiki/Comb_sort\n\nWorst-case performance: O(N^2)"}}, "functions": {"comb_sort": {"args": ["arr"], "returns": ["arr"], "min_max_lineno": {"min_lineno": 10, "max_lineno": 33}, "calls": ["len", "int", "comb_sort.comb_sort.swap"], "store_vars_calls": {"n": "len", "gap": "int"}, "functions": {"swap": {"args": ["i", "j"], "min_max_lineno": {"min_lineno": 11, "max_lineno": 13}, "source_code": "def swap(i, j):\n    (arr[i], arr[j]) = (arr[j], arr[i])"}}, "source_code": "def comb_sort(arr):\n\n    def swap(i, j):\n        (arr[i], arr[j]) = (arr[j], arr[i])\n    n = len(arr)\n    gap = n\n    shrink = 1.3\n    sorted = False\n    while not sorted:\n        gap = int(gap / shrink)\n        if gap > 1:\n            sorted = False\n        else:\n            gap = 1\n            sorted = True\n        i = 0\n        while i + gap < n:\n            if arr[i] > arr[i + gap]:\n                swap(i, i + gap)\n                sorted = False\n            i = i + 1\n    return arr"}}, "is_test": false}