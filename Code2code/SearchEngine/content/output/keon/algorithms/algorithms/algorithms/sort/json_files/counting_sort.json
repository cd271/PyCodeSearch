{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/sort/counting_sort.py", "fileNameBase": "counting_sort", "extension": "py"}, "functions": {"counting_sort": {"doc": {"long_description": "Sorting a array which has no element greater than k\nCreating a new temp_arr,where temp_arr[i] contain the number of\nelement less than or equal to i in the arr\nThen placing the number i into a correct position in the result_arr\nreturn the result_arr\nComplexity: 0(n)", "short_description": "Counting_sort"}, "args": ["arr"], "returns": ["result_arr"], "min_max_lineno": {"min_lineno": 1, "max_lineno": 37}, "calls": ["min", "max", "range", "arr.copy", "len"], "store_vars_calls": {"m": "min", "k": "max", "result_arr": "arr.copy"}, "source_code": "def counting_sort(arr):\n    \"\"\"\n    Counting_sort\n    Sorting a array which has no element greater than k\n    Creating a new temp_arr,where temp_arr[i] contain the number of\n    element less than or equal to i in the arr\n    Then placing the number i into a correct position in the result_arr\n    return the result_arr\n    Complexity: 0(n)\n    \"\"\"\n    m = min(arr)\n    different = 0\n    if m < 0:\n        different = -m\n        for i in range(len(arr)):\n            arr[i] += -m\n    k = max(arr)\n    temp_arr = [0] * (k + 1)\n    for i in range(0, len(arr)):\n        temp_arr[arr[i]] = temp_arr[arr[i]] + 1\n    for i in range(1, k + 1):\n        temp_arr[i] = temp_arr[i] + temp_arr[i - 1]\n    result_arr = arr.copy()\n    for i in range(len(arr) - 1, -1, -1):\n        result_arr[temp_arr[arr[i]] - 1] = arr[i] - different\n        temp_arr[arr[i]] = temp_arr[arr[i]] - 1\n    return result_arr"}}, "is_test": false}