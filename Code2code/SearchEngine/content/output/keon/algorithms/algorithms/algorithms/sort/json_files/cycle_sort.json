{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/sort/cycle_sort.py", "fileNameBase": "cycle_sort", "extension": "py"}, "functions": {"cycle_sort": {"doc": {"long_description": "This is based on the idea that the permutations to be sorted\ncan be decomposed into cycles,\nand the results can be individually sorted by cycling.\n\nreference: https://en.wikipedia.org/wiki/Cycle_sort\n\nAverage time complexity : O(N^2)\nWorst case time complexity : O(N^2)", "short_description": "cycle_sort"}, "args": ["arr"], "returns": ["arr"], "min_max_lineno": {"min_lineno": 1, "max_lineno": 47}, "calls": ["len", "range"], "store_vars_calls": {"len_arr": "len"}, "source_code": "def cycle_sort(arr):\n    \"\"\"\n    cycle_sort\n    This is based on the idea that the permutations to be sorted\n    can be decomposed into cycles,\n    and the results can be individually sorted by cycling.\n    \n    reference: https://en.wikipedia.org/wiki/Cycle_sort\n    \n    Average time complexity : O(N^2)\n    Worst case time complexity : O(N^2)\n    \"\"\"\n    len_arr = len(arr)\n    for cur in range(len_arr - 1):\n        item = arr[cur]\n        index = cur\n        for i in range(cur + 1, len_arr):\n            if arr[i] < item:\n                index += 1\n        if index == cur:\n            continue\n        while item == arr[index]:\n            index += 1\n        (arr[index], item) = (item, arr[index])\n        while index != cur:\n            index = cur\n            for i in range(cur + 1, len_arr):\n                if arr[i] < item:\n                    index += 1\n            while item == arr[index]:\n                index += 1\n            (arr[index], item) = (item, arr[index])\n    return arr"}}, "is_test": false}