{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/sort/pancake_sort.py", "fileNameBase": "pancake_sort", "extension": "py"}, "functions": {"pancake_sort": {"doc": {"long_description": "Sorting a given array\nmutation of selection sort\n\nreference: https://www.geeksforgeeks.org/pancake-sorting/\n\nOverall time complexity : O(N^2)", "short_description": "Pancake_sort"}, "args": ["arr"], "returns": ["arr", "arr"], "min_max_lineno": {"min_lineno": 1, "max_lineno": 26}, "calls": ["len", "range", "arr.index", "max", "reversed"], "store_vars_calls": {"len_arr": "len", "index_max": "arr.index"}, "source_code": "def pancake_sort(arr):\n    \"\"\"\n    Pancake_sort\n    Sorting a given array\n    mutation of selection sort\n\n    reference: https://www.geeksforgeeks.org/pancake-sorting/\n    \n    Overall time complexity : O(N^2)\n    \"\"\"\n    len_arr = len(arr)\n    if len_arr <= 1:\n        return arr\n    for cur in range(len(arr), 1, -1):\n        index_max = arr.index(max(arr[0:cur]))\n        if index_max + 1 != cur:\n            if index_max != 0:\n                arr[:index_max + 1] = reversed(arr[:index_max + 1])\n            arr[:cur] = reversed(arr[:cur])\n    return arr"}}, "is_test": false}