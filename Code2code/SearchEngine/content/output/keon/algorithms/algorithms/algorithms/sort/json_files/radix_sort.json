{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/sort/radix_sort.py", "fileNameBase": "radix_sort", "extension": "py", "doc": {"long_description": "complexity: O(nk + n) . n is the size of input list and k is the digit length of the number", "short_description": "radix sort", "full": "radix sort\ncomplexity: O(nk + n) . n is the size of input list and k is the digit length of the number"}}, "functions": {"radix_sort": {"args": ["arr", "simulation"], "returns": ["arr"], "min_max_lineno": {"min_lineno": 5, "max_lineno": 32}, "calls": ["max", "print", "list", "queue_list[].append", "range"], "store_vars_calls": {"max_number": "max"}, "source_code": "def radix_sort(arr, simulation=False):\n    position = 1\n    max_number = max(arr)\n    iteration = 0\n    if simulation:\n        print('iteration', iteration, ':', *arr)\n    while position <= max_number:\n        queue_list = [list() for _ in range(10)]\n        for num in arr:\n            digit_number = num // position % 10\n            queue_list[digit_number].append(num)\n        index = 0\n        for numbers in queue_list:\n            for num in numbers:\n                arr[index] = num\n                index += 1\n        if simulation:\n            iteration = iteration + 1\n            print('iteration', iteration, ':', *arr)\n        position *= 10\n    return arr"}}, "is_test": false}