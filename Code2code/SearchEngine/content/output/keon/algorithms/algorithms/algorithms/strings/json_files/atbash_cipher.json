{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/strings/atbash_cipher.py", "fileNameBase": "atbash_cipher", "extension": "py", "doc": {"long_description": "So if we take \"a\" as it is the first letter, we change it to the last - z.\n\nExample:\nAttack at dawn --> Zggzxp zg wzdm\n\nComplexity: O(n)", "short_description": "Atbash cipher is mapping the alphabet to it's reverse.", "full": "Atbash cipher is mapping the alphabet to it's reverse.\nSo if we take \"a\" as it is the first letter, we change it to the last - z.\n\nExample:\nAttack at dawn --> Zggzxp zg wzdm\n\nComplexity: O(n)"}}, "functions": {"atbash": {"args": ["s"], "returns": ["translated"], "min_max_lineno": {"min_lineno": 11, "max_lineno": 28}, "calls": ["range", "len", "ord", "s[].isalpha", "s[].isupper", "s[].islower", "chr"], "store_vars_calls": {"n": "ord"}, "source_code": "def atbash(s):\n    translated = ''\n    for i in range(len(s)):\n        n = ord(s[i])\n        if s[i].isalpha():\n            if s[i].isupper():\n                x = n - ord('A')\n                translated += chr(ord('Z') - x)\n            if s[i].islower():\n                x = n - ord('a')\n                translated += chr(ord('z') - x)\n        else:\n            translated += s[i]\n    return translated"}}, "is_test": false}