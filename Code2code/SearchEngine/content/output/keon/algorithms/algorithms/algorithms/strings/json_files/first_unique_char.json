{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/strings/first_unique_char.py", "fileNameBase": "first_unique_char", "extension": "py", "doc": {"long_description": "index. If it doesn't exist, return -1.\n\nFor example:\ns = \"leetcode\"\nreturn 0.\n\ns = \"loveleetcode\",\nreturn 2.\n\nReference: https://leetcode.com/problems/first-unique-character-in-a-string/description/", "short_description": "Given a string, find the first non-repeating character in it and return it's", "full": "Given a string, find the first non-repeating character in it and return it's\nindex. If it doesn't exist, return -1.\n\nFor example:\ns = \"leetcode\"\nreturn 0.\n\ns = \"loveleetcode\",\nreturn 2.\n\nReference: https://leetcode.com/problems/first-unique-character-in-a-string/description/"}}, "functions": {"first_unique_char": {"args": ["s"], "returns": ["-1", "0", "i"], "min_max_lineno": {"min_lineno": 14, "max_lineno": 28}, "calls": ["range", "len", "ban.append", "all"], "source_code": "def first_unique_char(s):\n    \"\"\"\n    :type s: str\n    :rtype: int\n    \"\"\"\n    if len(s) == 1:\n        return 0\n    ban = []\n    for i in range(len(s)):\n        if all((s[i] != s[k] for k in range(i + 1, len(s)))) == True and s[i] not in ban:\n            return i\n        else:\n            ban.append(s[i])\n    return -1"}}, "is_test": false}