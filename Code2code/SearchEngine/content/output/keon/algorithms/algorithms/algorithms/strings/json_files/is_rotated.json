{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/strings/is_rotated.py", "fileNameBase": "is_rotated", "extension": "py", "doc": {"long_description": "For example,\nis_rotated(\"hello\", \"llohe\") returns True\nis_rotated(\"hello\", \"helol\") returns False\n\naccepts two strings\nreturns bool\nReference: https://leetcode.com/problems/rotate-string/description/", "short_description": "Given two strings s1 and s2, determine if s2 is a rotated version of s1.", "full": "Given two strings s1 and s2, determine if s2 is a rotated version of s1.\nFor example,\nis_rotated(\"hello\", \"llohe\") returns True\nis_rotated(\"hello\", \"helol\") returns False\n\naccepts two strings\nreturns bool\nReference: https://leetcode.com/problems/rotate-string/description/"}}, "functions": {"is_rotated": {"args": ["s1", "s2"], "returns": ["s2 in s1 + s1", "False"], "min_max_lineno": {"min_lineno": 12, "max_lineno": 17}, "calls": ["len"], "source_code": "def is_rotated(s1, s2):\n    if len(s1) == len(s2):\n        return s2 in s1 + s1\n    else:\n        return False"}, "is_rotated_v1": {"args": ["s1", "s2"], "returns": ["False", "False", "True", "True"], "min_max_lineno": {"min_lineno": 22, "max_lineno": 32}, "calls": ["range", "len", "all"], "source_code": "def is_rotated_v1(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    if len(s1) == 0:\n        return True\n    for c in range(len(s1)):\n        if all((s1[(c + i) % len(s1)] == s2[i] for i in range(len(s1)))):\n            return True\n    return False"}}, "is_test": false}