{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/strings/rotate.py", "fileNameBase": "rotate", "extension": "py", "doc": {"long_description": "k can be any positive integer.\n\nFor example,\nrotate(\"hello\", 2) return \"llohe\"\nrotate(\"hello\", 5) return \"hello\"\nrotate(\"hello\", 6) return \"elloh\"\nrotate(\"hello\", 7) return \"llohe\"\nrotate(\"hello\", 102) return \"lohel\"", "short_description": "Given a strings s and int k, return a string that rotates k times", "full": "Given a strings s and int k, return a string that rotates k times\n\nk can be any positive integer.\n\nFor example,\nrotate(\"hello\", 2) return \"llohe\"\nrotate(\"hello\", 5) return \"hello\"\nrotate(\"hello\", 6) return \"elloh\"\nrotate(\"hello\", 7) return \"llohe\"\nrotate(\"hello\", 102) return \"lohel\""}}, "functions": {"rotate": {"args": ["s", "k"], "returns": ["long_string[k:k + len(s)]", "long_string[k - len(s):k]"], "min_max_lineno": {"min_lineno": 14, "max_lineno": 20}, "calls": ["len"], "source_code": "def rotate(s, k):\n    long_string = s * (k // len(s) + 2)\n    if k <= len(s):\n        return long_string[k:k + len(s)]\n    else:\n        return long_string[k - len(s):k]"}, "rotate_alt": {"args": ["string", "k"], "returns": ["string[k:] + string[:k]"], "min_max_lineno": {"min_lineno": 21, "max_lineno": 24}, "calls": ["len"], "source_code": "def rotate_alt(string, k):\n    k = k % len(string)\n    return string[k:] + string[:k]"}}, "is_test": false}