{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/tree/bst/unique_bst.py", "fileNameBase": "unique_bst", "extension": "py", "doc": {"long_description": "(binary search trees) that store values 1...n?\n\nFor example,\nGiven n = 3, there are a total of 5 unique BST's.\n\n   1         3     3      2      1\n    \\       /     /      / \\           3     2     1      1   3      2\n    /     /       \\                    2     1         2                 3", "short_description": "Given n, how many structurally unique BST's", "full": "Given n, how many structurally unique BST's\n(binary search trees) that store values 1...n?\n\nFor example,\nGiven n = 3, there are a total of 5 unique BST's.\n\n   1         3     3      2      1\n    \\       /     /      / \\           3     2     1      1   3      2\n    /     /       \\                    2     1         2                 3"}}, "functions": {"num_trees": {"args": ["n"], "returns": ["dp[-1]"], "min_max_lineno": {"min_lineno": 29, "max_lineno": 41}, "calls": ["range"], "source_code": "def num_trees(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, n + 1):\n        for j in range(i + 1):\n            dp[i] += dp[i - j] * dp[j - 1]\n    return dp[-1]"}}, "is_test": false}