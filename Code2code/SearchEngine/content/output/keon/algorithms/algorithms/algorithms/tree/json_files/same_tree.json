{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/tree/same_tree.py", "fileNameBase": "same_tree", "extension": "py", "doc": {"long_description": "if they are equal or not.\n\nTwo binary trees are considered equal if they are\nstructurally identical and the nodes have the same value.", "short_description": "Given two binary trees, write a function to check", "full": "Given two binary trees, write a function to check\nif they are equal or not.\n\nTwo binary trees are considered equal if they are\nstructurally identical and the nodes have the same value."}}, "functions": {"is_same_tree": {"args": ["tree_p", "tree_q"], "returns": ["False", "True", "is_same_tree(tree_p.left, tree_q.left) and is_same_tree(tree_p.right, tree_q.right)"], "min_max_lineno": {"min_lineno": 10, "max_lineno": 16}, "calls": ["same_tree.is_same_tree"], "source_code": "def is_same_tree(tree_p, tree_q):\n    if tree_p is None and tree_q is None:\n        return True\n    if tree_p is not None and tree_q is not None and (tree_p.val == tree_q.val):\n        return is_same_tree(tree_p.left, tree_q.left) and is_same_tree(tree_p.right, tree_q.right)\n    return False"}}, "is_test": false}