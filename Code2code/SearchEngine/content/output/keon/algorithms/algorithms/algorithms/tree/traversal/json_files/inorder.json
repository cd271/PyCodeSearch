{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/tree/traversal/inorder.py", "fileNameBase": "inorder", "extension": "py", "doc": {"short_description": "Time complexity : O(n)", "full": "Time complexity : O(n)"}}, "classes": {"Node": {"min_max_lineno": {"min_lineno": 6, "max_lineno": 12}, "methods": {"__init__": {"args": ["self", "val", "left", "right"], "min_max_lineno": {"min_lineno": 8, "max_lineno": 12}, "source_code": "def __init__(self, val, left=None, right=None):\n    self.val = val\n    self.left = left\n    self.right = right"}}}}, "functions": {"inorder": {"doc": {"short_description": "In order function "}, "args": ["root"], "returns": ["res", "res"], "min_max_lineno": {"min_lineno": 14, "max_lineno": 28}, "calls": ["stack.pop", "res.append", "stack.append"], "store_vars_calls": {"root": "stack.pop"}, "source_code": "def inorder(root):\n    \"\"\" In order function \"\"\"\n    res = []\n    if not root:\n        return res\n    stack = []\n    while root or stack:\n        while root:\n            stack.append(root)\n            root = root.left\n        root = stack.pop()\n        res.append(root.val)\n        root = root.right\n    return res"}, "inorder_rec": {"doc": {"short_description": "Recursive Implementation "}, "args": ["root", "res"], "returns": ["res", "[]"], "min_max_lineno": {"min_lineno": 29, "max_lineno": 39}, "calls": ["inorder.inorder_rec", "res.append"], "source_code": "def inorder_rec(root, res=None):\n    \"\"\" Recursive Implementation \"\"\"\n    if root is None:\n        return []\n    if res is None:\n        res = []\n    inorder_rec(root.left, res)\n    res.append(root.val)\n    inorder_rec(root.right, res)\n    return res"}}, "body": {"calls": ["inorder.Node", "inorder.inorder", "inorder.inorder_rec"], "store_vars_calls": {"n1": "Node", "n2": "Node", "n3": "Node", "n4": "Node", "n5": "Node", "n6": "Node", "n7": "Node"}, "source_code": ["Node(100)", "Node(50)", "Node(150)", "Node(25)", "Node(75)", "Node(125)", "Node(175)", "inorder(n1)", "inorder_rec(n1)"]}, "main_info": {"main_flag": 1, "type": "script"}, "is_test": true}