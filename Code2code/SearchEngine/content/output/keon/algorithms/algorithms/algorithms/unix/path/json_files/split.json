{"file": {"path": "/cs/home/cd271/Documents/Project/Examples/SemanticCodeSearch/Code2code/SearchEngine/content/keon/algorithms/algorithms/unix/path/split.py", "fileNameBase": "split", "extension": "py", "doc": {"long_description": "Example:\nInput: https://algorithms/unix/test.py   (for url)\nOutput:\n    part[0]: https://algorithms/unix\n    part[1]: test.py\n\nInput: algorithms/unix/test.py          (for file path)\nOutput:\n    part[0]: algorithms/unix\n    part[1]: test.py", "short_description": "Splitting a path into 2 parts", "full": "Splitting a path into 2 parts\nExample:\nInput: https://algorithms/unix/test.py   (for url)\nOutput:\n    part[0]: https://algorithms/unix\n    part[1]: test.py\n\nInput: algorithms/unix/test.py          (for file path)\nOutput:\n    part[0]: algorithms/unix\n    part[1]: test.py"}}, "dependencies": [{"import": "os", "type": "external", "type_element": "module"}], "functions": {"split": {"args": ["path"], "returns": ["parts"], "min_max_lineno": {"min_lineno": 16, "max_lineno": 24}, "calls": ["path.rpartition", "parts.append"], "store_vars_calls": {"split_part": "path.rpartition"}, "source_code": "def split(path):\n    parts = []\n    split_part = path.rpartition('/')\n    parts.append(split_part[0])\n    parts.append(split_part[2])\n    return parts"}}, "is_test": false}